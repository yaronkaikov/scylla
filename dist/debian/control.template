Source: %{product}-server
Maintainer: Takuya ASADA <syuu@scylladb.com>
Homepage: http://scylladb.com
Section: database
Priority: optional
X-Python3-Version: >= 3.4
Standards-Version: 3.9.5
Rules-Requires-Root: no

Package: %{product}-conf
Architecture: any
Description: Scylla database main configuration file
 Scylla is a highly scalable, eventually consistent, distributed,
 partitioned row DB.
Replaces: %{product}-server (<< 1.1)
Conflicts: %{product}-server (<< 1.1)

Package: %{product}-server
Architecture: any
Depends: ${misc:Depends}, %{product}-conf (= ${binary:Version}), %{product}-python3 (= ${binary:Version})
Description: Scylla database server binaries 
 Scylla is a highly scalable, eventually consistent, distributed,
 partitioned row DB.

Package: %{product}-server-dbg
Section: debug
Priority: extra
Architecture: any
Depends: %{product}-server (= ${binary:Version}), ${misc:Depends}
Description: debugging symbols for %{product}-server
 Scylla is a highly scalable, eventually consistent, distributed,
 partitioned row DB.
 This package contains the debugging symbols for %{product}-server.

Package: %{product}-kernel-conf
Architecture: any
Depends: procps
Description: Scylla kernel tuning configuration
 Scylla is a highly scalable, eventually consistent, distributed,
 partitioned row DB.

Package: %{product}-node-exporter
Architecture: any
Conflicts: prometheus-node-exporter
Description: Prometheus exporter for machine metrics
 Prometheus exporter for machine metrics, written in Go with pluggable metric collectors.

Package: %{product}
Section: metapackages
Architecture: any
Depends: %{product}-server (= ${binary:Version})
 , %{product}-jmx (= ${binary:Version})
 , %{product}-tools (= ${binary:Version})
 , %{product}-tools-core (= ${binary:Version})
 , %{product}-kernel-conf (= ${binary:Version})
 , %{product}-node-exporter (= ${binary:Version})
 , %{product}-cqlsh (= ${binary:Version})
Recommends: %{product}-machine-image (= ${binary:Version})
Description: Scylla database metapackage
 Scylla is a highly scalable, eventually consistent, distributed,
 partitioned row DB.
